--[[ Driver for CraftOS 1.7

Some example rpc calls

--> {"jsonrpc": "2.0", "method": "subtract", "params": {"subtrahend": 23, "minuend": 42}, "id": 3}
<-- {"jsonrpc": "2.0", "result": 19, "id": 3}

--> {"jsonrpc": "2.0", "method": "subtract", "params": {"minuend": 42, "subtrahend": 23}, "id": 4}
<-- {"jsonrpc": "2.0", "result": 19, "id": 4}

]]--
rpc.new("forward", "return turtle.forward()")
rpc.new("turnLeft", "return turtle.turnLeft()")
rpc.new("turnRight", "return turtle.turnRight()")
rpc.new("back", "return turtle.back()")
rpc.new("up", "return turtle.up()")
rpc.new("down", "return turtle.down()")
rpc.new("dig", "return turtle.dig()")
rpc.new("digUp", "return turtle.digUp()")
rpc.new("digDown", "return turtle.digDown()")
rpc.new("place", "local args = {...} return turtle.place(args[1])")
rpc.new("placeUp", "return turtle.placeUp()")
rpc.new("placeDown", "return turtle.placeDown()")
rpc.new("detect", "return turtle.detect()")
rpc.new("detectUp", "return turtle.detectUp()")
rpc.new("detectDown", "return turtle.detectDown()")
rpc.new("compare", "return turtle.compare()")
rpc.new("compareTo", "local args = {...} return turtle.compareTo(tonumber(args[1]))")
rpc.new("compareUp", "return turtle.compareUp()")
rpc.new("compareDown", "return turtle.compareDown()")
rpc.new("suck", "return turtle.suck()")
rpc.new("suckUp", "return turtle.suckUp()")
rpc.new("suckDown", "return turtle.suckDown()")
rpc.new("drop", "return turtle.drop()")
rpc.new("craft", "return turtle.craft()")
rpc.new("dropUp", "return turtle.dropUp()")
rpc.new("dropDown", "return turtle.dropDown()")
rpc.new("select", "local args = {...} return turtle.select(tonumber(args[1]))")
rpc.new("getItemCount", "local args = {...} return turtle.getItemCount(tonumber(args[1]))")
rpc.new("getItemSpace", "local args = {...} return turtle.getItemSpace(tonumber(args[1]))")
rpc.new("refuel", "local args = {...} return turtle.refuel(tonumber(args[1]))")
rpc.new("transferTo", "local args = {...} return turtle.transferTo(tonumber(args[1]), tonumber(args[2]))")
rpc.new("getFuelLevel", "return turtle.getFuelLevel()")
